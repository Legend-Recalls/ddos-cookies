name: Harvest DDoS-Guard cookies and Scan Anime

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */1 * * *' # every 4 hours

jobs:
  harvest-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Chromium dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libatk1.0-0t64 \
            libatk-bridge2.0-0t64 \
            libgtk-3-0t64 \
            libnss3 \
            libxss1 \
            libasound2t64 \
            libxshmfence1 \
            libxrandr2 \
            libgbm1 \
            libpangocairo-1.0-0 \
            libxcomposite1 \
            libcups2t64 \
            libpango-1.0-0 \
            libxdamage1 \
            libxfixes3 \
            libxi6 \
            libxext6 \
            libx11-6 \
            libxtst6 \
            fonts-liberation

      - name: Install dependencies
        run: npm ci

      - name: Run cookie harvester
        env:
          TARGET: 'https://animepahe.ru'
          MAX_WAIT_MS: '25000'
        run: npm run harvest

      - name: Verify cookies were generated
        run: |
          echo "Checking for cookie files..."
          ls -la cookies*.txt cookies*.json || echo "No cookie files found"
          if [ -f "cookies.json" ]; then
            echo "‚úÖ cookies.json found"
            head -n 5 cookies.json
          else
            echo "‚ùå cookies.json not found"
            exit 1
          fi

      - name: Run anime scanner
        run: |
          echo "üöÄ Starting anime scanning with fresh cookies..."
          node index.js

      - name: Verify scan results
        run: |
          echo "üìä Checking scan results..."
          if [ -f "recent-anime.json" ]; then
            echo "‚úÖ recent-anime.json created"
            jq '.total' recent-anime.json
          else
            echo "‚ùå recent-anime.json not found"
          fi
          
          if [ -f "popular-anime.json" ]; then
            echo "‚úÖ popular-anime.json created"
            jq '.total' popular-anime.json
          else
            echo "‚ùå popular-anime.json not found"
          fi

      - name: Upload all artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anime-data-and-cookies
          path: |
            cookies.txt
            cookies.json
            recent-anime.json
            popular-anime.json
          retention-days: 7

      - name: Commit and push results to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add the generated files
          git add recent-anime.json popular-anime.json cookies.json
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Create commit message with scan stats
            RECENT_COUNT=$(jq -r '.total // 0' recent-anime.json)
            POPULAR_COUNT=$(jq -r '.total // 0' popular-anime.json)
            TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")
            
            git commit -m "ü§ñ Auto-scan: ${RECENT_COUNT} airing, ${POPULAR_COUNT} popular anime - ${TIMESTAMP}"
            git push
            echo "‚úÖ Results pushed to repository"
          fi
