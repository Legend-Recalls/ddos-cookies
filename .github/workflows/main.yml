name: Harvest DDoS-Guard cookies and Scan Anime
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *' # every 4 hours (fixed syntax)
jobs:
  harvest-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Chromium dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libatk1.0-0t64 \
            libatk-bridge2.0-0t64 \
            libgtk-3-0t64 \
            libnss3 \
            libxss1 \
            libasound2t64 \
            libxshmfence1 \
            libxrandr2 \
            libgbm1 \
            libpangocairo-1.0-0 \
            libxcomposite1 \
            libcups2t64 \
            libpango-1.0-0 \
            libxdamage1 \
            libxfixes3 \
            libxi6 \
            libxext6 \
            libx11-6 \
            libxtst6 \
            fonts-liberation
      - name: Install dependencies
        run: npm ci
      - name: Run cookie harvester
        env:
          TARGET: 'https://animepahe.si'
          MAX_WAIT_MS: '25000'
        run: npm run harvest
      - name: Verify cookies were generated
        run: |
          echo "Checking for cookie files..."
          ls -la cookies*.txt cookies*.json || echo "No cookie files found"
          if [ -f "cookies.json" ]; then
            echo "✅ cookies.json found"
            head -n 5 cookies.json
          else
            echo "❌ cookies.json not found"
            exit 1
          fi
      - name: Run anime scanner
        run: |
          echo "🚀 Starting anime scanning with fresh cookies..."
          node index.js
      - name: Verify scan results
        run: |
          echo "📊 Checking scan results..."
          
          # Check recent anime
          if [ -f "recent-anime.json" ]; then
            echo "✅ recent-anime.json created"
            RECENT_COUNT=$(jq -r '.total // 0' recent-anime.json)
            echo "   📺 Recent anime: $RECENT_COUNT items"
          else
            echo "❌ recent-anime.json not found"
          fi
          
          # Check popular anime
          if [ -f "popular-anime.json" ]; then
            echo "✅ popular-anime.json created"
            POPULAR_COUNT=$(jq -r '.total // 0' popular-anime.json)
            echo "   🔥 Popular anime: $POPULAR_COUNT items"
          else
            echo "❌ popular-anime.json not found"
          fi
          
          # Check top movies
          if [ -f "top-movies.json" ]; then
            echo "✅ top-movies.json created"
            MOVIES_COUNT=$(jq -r '.total // 0' top-movies.json)
            echo "   🎬 Top movies: $MOVIES_COUNT items"
          else
            echo "❌ top-movies.json not found"
          fi
          
          # Check upcoming anime
          if [ -f "upcoming-anime.json" ]; then
            echo "✅ upcoming-anime.json created"
            UPCOMING_COUNT=$(jq -r '.total // 0' upcoming-anime.json)
            echo "   📅 Upcoming anime: $UPCOMING_COUNT items"
          else
            echo "❌ upcoming-anime.json not found"
          fi
          
          # Show total files created
          echo ""
          echo "📁 All generated files:"
          ls -la *.json | grep -E "(recent-anime|popular-anime|top-movies|upcoming-anime|cookies)\.json" || echo "No JSON files found"
      - name: Upload all artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anime-data-and-cookies
          path: |
            cookies.txt
            cookies.json
            recent-anime.json
            popular-anime.json
            top-movies.json
            upcoming-anime.json
          retention-days: 7
      - name: Commit and push results to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add the generated files
          git add recent-anime.json popular-anime.json top-movies.json upcoming-anime.json cookies.json
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Create commit message with scan stats
            RECENT_COUNT=$(jq -r '.total // 0' recent-anime.json 2>/dev/null || echo "0")
            POPULAR_COUNT=$(jq -r '.total // 0' popular-anime.json 2>/dev/null || echo "0")
            MOVIES_COUNT=$(jq -r '.total // 0' top-movies.json 2>/dev/null || echo "0")
            UPCOMING_COUNT=$(jq -r '.total // 0' upcoming-anime.json 2>/dev/null || echo "0")
            TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")
            
            git commit -m "🤖 Auto-scan: ${RECENT_COUNT} airing, ${POPULAR_COUNT} popular, ${MOVIES_COUNT} movies, ${UPCOMING_COUNT} upcoming - ${TIMESTAMP}"
            git push
            echo "✅ Results pushed to repository"
          fi
